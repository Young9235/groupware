<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.softleaf.groupware.dao.UserMapper">

	<!-- 로그인시 필요 , 인증 시 처음 거치는 부분 -->
	<select id="findByLoginId" resultType="com.softleaf.groupware.dto.UserDTO">
		SELECT A.*, group_concat(B.auth_name) as roles
		FROM user_info A
	 	left outer join member_auth_info B on A.user_id = B.user_id
		where A.login_id = #{loginId}
		AND A.use_status = "Y"
		AND A.approv_yn = "Y"
		group by A.user_id
	</select>

	<!-- 리프레시 토큰 업데이트 -->
	<update id="updateRefreshToken" parameterType="Map">
		UPDATE user_info
		SET refresh_token = #{refreshToken}
		WHERE login_id = #{loginId}
	</update>

	<!-- 리프레시 토큰 조회 -->
	<select id="getUserRenew" resultType="com.softleaf.groupware.dto.UserDTO">
		SELECT A.*, group_concat(B.auth_name) as roles
		FROM user_info A
	 	left outer join member_auth_info B
		on A.user_id = B.user_id
		where A.refresh_token = #{refreshToken}
		group by A.user_id
	</select>

	<!-- 가입 된 ID 체크 -->
	<select id="getLoginCheck" resultType="Integer">
		SELECT 
		    COUNT(*) as cnt
		FROM
		    user_info
		WHERE login_id = #{loginId}
		 AND use_status = "Y"
		 <if test='approvYn != null and approvYn != ""'>
			AND approv_yn = #{approvYn}
		 </if>
	</select>

	<!-- 메일 인증 시, 키 값 등록 -->
	<update id="createAuthKey" parameterType="Map">
		UPDATE user_info
		SET mail_key = #{mailKey}
		WHERE login_id = #{loginId}
		  AND approv_yn = "N" -- 인증을 받아야되는 계정을 조회
	</update>

	<!-- 회원가입 최종 완료 -->
	<update id="deleteAuthKay" parameterType="Map">
		UPDATE user_info
		SET mail_key = null,
		    user_id = #{userId},
		    update_date = date_format(now(),'%Y-%m-%d %H:%i:%s'),
			approv_yn = "Y"
		WHERE login_id = #{loginId}
	</update>

	<select id="getUserListCnt" resultType="Integer">
		SELECT COUNT(*) FROM user_info
		where 1=1 AND use_status = "Y"
		<if test='userName != null and userName != ""'>
			and user_name like concat('%', #{userName}, '%')
		</if> 
	</select>

  	<!-- 회원 등록(초기 가입 시)  -->
    <insert id="insertUser" useGeneratedKeys="true"  keyProperty="userId" parameterType="com.softleaf.groupware.dto.UserDTO" >
		INSERT INTO user_info
		(
			login_id,
			password,
			user_name,  
			phone_num,
			approv_yn,
			create_id, 
			create_date, 
			update_id, 
			update_date 
		)
		VALUES
		(
			#{loginId},
			#{password},
			#{userName},
			#{phoneNum},
		 	#{approvYn},
			#{userId},
            date_format(now(),'%Y-%m-%d %H:%i:%s'),
			#{userId},
            date_format(now(),'%Y-%m-%d %H:%i:%s')
		)
		<selectKey keyProperty="userId" resultType="Integer">
			SELECT LAST_INSERT_ID()
		</selectKey>
    </insert>

	<update id="updateUser" parameterType="com.softleaf.groupware.dto.UserDTO">
		UPDATE user_info
		   SET update_date = date_format(now(),'%Y-%m-%d %H:%i:%s')
				,update_id = #{userId}
			<if test="loginId != null">
				,login_id = #{loginId}
			</if>
			<if test="password != null">
				,password = #{password}
			</if>
			<if test="userName != null">
				,user_name = #{userName}
			</if>
			<if test="phoneNum != null">
				,phone_num = #{phoneNum}
			</if>
			<if test="useStatus != null">
				,use_status = #{useStatus}
			</if>
		   WHERE
		   	 user_id = #{userId}
	</update>


	<update id="deleteUser" parameterType="Map">
			UPDATE user_info
			   SET use_status = "N"
			 WHERE 
			<choose>
			<when test="userIdList != null">
				user_id in 
				<foreach collection="userIdList" item="item" index="index" separator="," open="(" close=")">
		            #{item}
		        </foreach>	
			</when>
			<otherwise>
				user_id = #{userId}
			</otherwise>
		</choose>	
	</update>
  	
	
	<select id="getUserList" resultType="com.softleaf.groupware.dto.UserDTO">
		SELECT 
		    u.user_id,
		    u.login_id,
		    u.user_password,
		    u.user_name,
		    u.user_phone_num,
		    u.use_status,
		    u.delete_status,
		    u.roll_id,
		    u.create_id,
		    u.create_date,
		    u.update_id,
		    u.update_date,
		    r.roll_name
		FROM
		    user_info AS u
		    LEFT OUTER JOIN roll_code_info AS r ON u.roll_id = r.roll_id
		WHERE
		    use_status = 'Y' AND 1 = 1
		<if test='userName != null and userName != ""'>
			and u.user_name like concat('%', #{userName}, '%')
		</if> 
		order by user_id desc
  		limit #{startNum}, #{rowsPerPage}
	</select>

	<!-- 유저 정보 조회 -->
	<select id="getUserInfo" resultType="com.softleaf.groupware.dto.UserDTO">
		SELECT
		   A.user_id,
		   A.login_id,
		   A.user_name,
		   A.phone_num,
		   A.use_status,
		   A.approv_yn,
		   A.mail_key,
		   group_concat(B.auth_name) as roles
		FROM
			user_info A
		left outer join member_auth_info B on A.user_id = B.user_id
		WHERE
			A.use_status = "Y"
		<choose>
			<when test='loginId != null and loginId != ""'>
				AND A.login_id = #{loginId}
				<if test='pageMode == "AUTH_LOGIN" and password != null'>
					AND A.password = #{password}
				</if>
			</when>
			<otherwise>
				AND A.user_id = #{userId}
			</otherwise>
		</choose>
	</select>
  
</mapper>